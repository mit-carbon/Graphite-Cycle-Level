SIM_ROOT ?= $(CURDIR)/../

include $(SIM_ROOT)/Makefile.config

DIRECTORIES = $(SIM_ROOT)/common/core/        									\
			 $(SIM_ROOT)/common/core/memory_subsystem/							\
          $(SIM_ROOT)/common/core/memory_subsystem/cache/      			\
			 $(SIM_ROOT)/common/core/memory_subsystem/directory_schemes/	\
          $(SIM_ROOT)/common/network/         									\
			 $(SIM_ROOT)/common/network/models	 									\
			 $(SIM_ROOT)/common/network/components/router	   				\
			 $(SIM_ROOT)/common/network/components/router/performance	   \
			 $(SIM_ROOT)/common/network/components/router/performance/flow_control_schemes	   							\
			 $(SIM_ROOT)/common/network/components/router/performance/flow_control_schemes/buffer_models	   			\
			 $(SIM_ROOT)/common/network/components/router/performance/flow_control_schemes/buffer_usage_history	   \
			 $(SIM_ROOT)/common/network/components/router/performance/network_msg_types									   \
			 $(SIM_ROOT)/common/network/components/router/performance/network_msg_types/buffer_management_msg_types  \
			 $(SIM_ROOT)/common/network/components/router/power				\
			 $(SIM_ROOT)/common/network/components/link							\
			 $(SIM_ROOT)/common/network/components/link/performance			\
			 $(SIM_ROOT)/common/network/components/link/power     			\
          $(SIM_ROOT)/common/transport/       									\
          $(SIM_ROOT)/common/misc/            									\
          $(SIM_ROOT)/common/misc/time_normalizers								\
          $(SIM_ROOT)/common/config/	      									\
          $(SIM_ROOT)/common/system/          									\
          $(SIM_ROOT)/common/performance_model/      							\
          $(SIM_ROOT)/common/performance_model/branch_predictors/      	\
          $(SIM_ROOT)/common/performance_model/performance_models/     	\
          $(SIM_ROOT)/common/performance_model/memory_subsystem/     	\
          $(SIM_ROOT)/common/performance_model/queue_models/     			\
          $(SIM_ROOT)/common/user/													\
			 $(SIM_ROOT)/																	\
			 $(CURDIR)/

INCLUDE_DIRECTORIES = $(DIRECTORIES)

CLEAN=$(findstring clean,$(MAKECMDGOALS))

OS_SERVICES_ROOT = $(SIM_ROOT)/os-services-25032-gcc.4.0.0-linux-ia32_intel64

KERNEL = LENNY

# OS Services Support
LD_LIBS += -los-services
CXXFLAGS += -DKERNEL_$(KERNEL)
ifeq ($(TARGET_ARCH),ia32)
  CXXFLAGS += -I$(OS_SERVICES_ROOT)/include-ia32 -m32 -DTARGET_IA32
  LD_FLAGS += -los-services -L $(OS_SERVICES_ROOT)/ia32 -m32
endif 
ifeq ($(TARGET_ARCH),x86_64)
  CXXFLAGS += -I$(OS_SERVICES_ROOT)/include-intel64 -fPIC -DTARGET_X86_64
  LD_FLAGS += -los-services -L $(OS_SERVICES_ROOT)/intel64
endif

include $(SIM_ROOT)/Makefile.config

ifeq ($(BOOST_VERSION),1_38)
	BOOST_ROOT = /afs/csail/group/carbon/tools/boost_1_38_0
	BOOST_SUFFIX = gcc41-mt-1_38
	export LD_LIBRARY_PATH := $(BOOST_ROOT)/stage/lib:$(LD_LIBRARY_PATH)
	CXXFLAGS += -I$(BOOST_ROOT)
	LD_FLAGS += -L$(BOOST_ROOT)/stage/lib
else
	BOOST_SUFFIX = mt
endif

LD_LIBS += -lboost_filesystem-$(BOOST_SUFFIX) -lboost_system-$(BOOST_SUFFIX) -pthread

# Other Libraries in Contrib
LD_LIBS += -lorion
LD_FLAGS += -L$(SIM_ROOT)/contrib/orion

LD_FLAGS += -L$(SIM_ROOT)/lib
export LD_LIBRARY_PATH := $(SIM_ROOT)/lib:$(LD_LIBRARY_PATH)

# Include paths
CXXFLAGS+=-c $(foreach dir,$(INCLUDE_DIRECTORIES),-I$(dir)) \
          -Wall -Werror -Wno-unknown-pragmas -O2 -MMD

# Build rules for dependency generation
%.d: %.cpp
	$(CXX) -MM -MG $(CXXFLAGS) $< | sed -e 's,^\([^:]*\)\.o[ ]*:,$(@D)/\1.o $(@D)/\1.d:,' >$@

%.d: %.cc
	$(CXX) -MM -MG $(CXXFLAGS) $< | sed -e 's,^\([^:]*\)\.o[ ]*:,$(@D)/\1.o $(@D)/\1.d:,' >$@

%.d: %.c
	$(CC) -MM -MG $(CFLAGS) $< | sed -e 's,^\([^:]*\)\.o[ ]*:,$(@D)/\1.o $(@D)/\1.d:,' >$@

ifneq ($(MAKECMDGOALS),clean)
include $(OBJECTS:%.o=%.d)
endif

# Build rules for object generation
%.o : %.cpp
	$(CXX) $(CXXFLAGS) -o $@ $<

%.o : %.cc
	$(CXX) $(CXXFLAGS) -o $@ $<

%.o : %.c
	$(CC) $(CFLAGS) -c -o $@ $<

# targets
all: $(OBJECTS)

ifneq ($(CLEAN),)
clean:
	-rm -f *.o *.d
endif
